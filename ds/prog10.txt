#include<stdio.h> 
#include<stdlib.h> 
 
struct node { 
    int info; 
    struct node *left; 
    struct node *right; 
}; 
 
typedef struct node NODE; 
NODE *root=NULL; 
 
void insert(int x) { 
    NODE *temp,*prev,*cur; 
    temp = (NODE*)malloc(sizeof(NODE)); 
    temp->left = NULL; 
    temp->right = NULL; 
    temp->info = x; 
 
    if(root == NULL) { 
        root = temp; 
        return; 
    } 
    prev = NULL; 
    cur = root; 
 
    while(cur != NULL) { 
        prev = cur; 
        if(x < cur->info)  
            cur = cur->left; 
        else if(x > cur->info) 
            cur = cur->right; 
        else { 
            printf("\nDuplicate value not allowed."); 
            return; 
        } 
    } 
 
    if(x < prev->info) 
        prev->left = temp; 
    else 
        prev->right = temp; 
} 
 
void preorder(NODE *root) { 
    if(root != NULL) { 
        printf("%d ", root->info); 
        preorder(root->left); 
        preorder(root->right); 
    } 
} 
 
void inorder(NODE *root) { 
    if(root != NULL) { 
        inorder(root->left); 
        printf("%d ", root->info); 
        inorder(root->right); 
    } 
} 
 
void postorder(NODE *root) { 
    if(root != NULL) { 
        postorder(root->left); 
        postorder(root->right); 
        printf("%d ", root->info); 
    } 
} 
 
int main() { 
    int item, ch; 
    while(1)  
    { 
        printf("\n\n1.Insert\n2.Preorder\n3.Inorder\n4.Postorder\n5.Exit\n"); 
        printf("\nEnter your choice: "); 
        scanf("%d", &ch); 
 
        switch(ch) { 
            case 1:  printf("\nEnter element to be inserted: "); 
                         scanf("%d", &item); 
                         insert(item); 
                         break; 
            case 2: printf("\nPreorder traversal: "); 
                         preorder(root); 
                         break; 
            case 3: printf("\nInorder traversal: "); 
                inorder(root); 
                break; 
            case 4: printf("\nPostorder traversal: "); 
                         postorder(root); 
                         break; 
            case 5: exit(0); 
            default: printf("\nInvalid choice"); 
                 
        } 
    } 
    return 0; 
} 